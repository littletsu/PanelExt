/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package littletsu;

import java.awt.Graphics;
import java.awt.Image;
import java.beans.BeanProperty;
import java.beans.JavaBean;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author pc
 */
@JavaBean(description="A JLayeredPane with an icon that is automatically scaled to the component's size.")
public class PanelExt extends javax.swing.JLayeredPane {

    Icon icon;
    int scalingHints = Image.SCALE_SMOOTH;
    
    private ImageIcon imgIcon;
    public PanelExt() {
        initComponents();
    }

    private int lastUpdateW = -1;
    private int lastUpdateH = -1;
    
    @Override
    public void paintComponent(java.awt.Graphics compg) {
        super.paintComponent(compg);
        Graphics g = compg.create();
        updateImgIcon();
        if(icon != null) {
            icon.paintIcon(this, g, 0, 0);    
        }
        g.dispose();
    }
    
    private void rescaleImgIcon() {
        if(imgIcon == null) return;
        
        int w = this.getWidth();
        int h = this.getHeight();
        
        if(w == 0 || h == 0) {
            icon = imgIcon;
            return;
        }
        
        icon = new ImageIcon(imgIcon.getImage().getScaledInstance(w, h, scalingHints));
    }
    
    private void updateImgIcon() {
        if(imgIcon == null) return;
        
        int w = this.getWidth();
        int h = this.getHeight();
        
        if(w == lastUpdateW && h == lastUpdateH) return;
        
        lastUpdateW = w;
        lastUpdateH = h;
        
        rescaleImgIcon();
    }        
    
    @BeanProperty(bound=false, preferred=true, description="Icon for the panel background. Is rescaled to fit the panel's dimensions.")
    public void setIcon(Icon i) {
        if(i instanceof ImageIcon) {
            ImageIcon img = (ImageIcon)i;
            imgIcon = img;
            lastUpdateW-=1;
            lastUpdateH-=1;
            updateImgIcon();
            return;
        }
        lastUpdateW = -1;
        lastUpdateH = -1;
        imgIcon = null;
        icon = i;
    }
    
    public Icon getIcon() {
        return icon;
    }
    
    public ImageIcon getImageIcon() {
        return imgIcon;
    }
    
    
    @BeanProperty(bound=false, required=true, description="Scaling hints for icon rescaling.", enumerationValues={"java.awt.Image.SCALE_AREA_AVERAGING", "java.awt.Image.SCALE_DEFAULT", "java.awt.Image.SCALE_FAST", "java.awt.Image.SCALE_REPLICATE", "java.awt.Image.SCALE_SMOOTH"})
    public void setScalingHints(int newHints) {
        scalingHints = newHints;
        rescaleImgIcon();
        
    }
    
    public int getScalingHints() {
        return scalingHints;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
